cabal-version:       3.0
name:                smallvec
version:             0.0.0.2
synopsis:            Vector backed by the SmallArray primitive
description:         Vector backed by the SmallArray primitive.
homepage:            https://github.com/identicalsnowflake/smallvec
bug-reports:         https://github.com/identicalsnowflake/smallvec/issues
license:             MIT
license-file:        LICENSE
author:              Identical Snowflake
maintainer:          identicalsnowflake@protonmail.com
copyright:           2020
category:            Data
extra-source-files:  CHANGELOG.md

source-repository head
  type:     git
  location: https://github.com/identicalsnowflake/smallvec

library
  exposed-modules:
      Data.Vector.Small
      Data.Vector.Small.Internal
      Data.Vector.Small.Mutable
  -- other-modules:
  build-depends: base >= 4.12.0.0 && < 5
               , deepseq >= 1.4.4.0
               , primitive >= 0.7.0.1 && < 0.8
               , vector >= 0.12.1.2 && < 0.13
  hs-source-dirs: src
  ghc-options: -Wall -Wextra
  default-language: Haskell2010
  default-extensions: AllowAmbiguousTypes
                    , BangPatterns
                    , BlockArguments
                    , DefaultSignatures
                    , FlexibleContexts
                    , FlexibleInstances
                    , MagicHash
                    , MultiParamTypeClasses
                    , ScopedTypeVariables
                    , TypeApplications
                    , TypeFamilies
                    , TypeOperators
                    , UnboxedTuples

test-suite spec
  ghc-options: -threaded -rtsopts -Wall -Wextra
  type: exitcode-stdio-1.0
  main-is: test/Spec.hs
  build-depends: QuickCheck >= 2.13.2 && < 2.14
               , base >= 4.12.0.0
               , deepseq >= 1.4.4.0
               , hspec >= 2 && < 3
               , smallvec
               , vector >= 0.12.1.2
  build-tool-depends: hspec-discover:hspec-discover
  default-language:    Haskell2010
  default-extensions: BlockArguments
                    , DeriveAnyClass
                    , DeriveGeneric
                    , ScopedTypeVariables

